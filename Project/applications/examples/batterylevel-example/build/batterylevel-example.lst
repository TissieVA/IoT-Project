ARM GAS  C:\Users\tomra\AppData\Local\Temp\ccHtz0ep.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"batterylevel-example.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.batteryLevel_measurement.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC0:
  20 0000 56626174 		.ascii	"Vbat: %i mV, I=%i mA SoC=%i, C=%i, P=%i A=%i , CC=%"
  20      3A202569 
  20      206D562C 
  20      20493D25 
  20      69206D41 
  21 0033 640D0A00 		.ascii	"d\015\012\000"
  22              		.section	.text.batteryLevel_measurement,"ax",%progbits
  23              		.align	1
  24              		.global	batteryLevel_measurement
  25              		.arch armv7e-m
  26              		.syntax unified
  27              		.thumb
  28              		.thumb_func
  29              		.fpu fpv4-sp-d16
  31              	batteryLevel_measurement:
  32              	.LVL0:
  33              	.LFB132:
  34              		.file 1 "../../../applications/examples/batterylevel-example/src/batterylevel-example.c"
   1:../../../applications/examples/batterylevel-example/src/batterylevel-example.c **** #include "batterylevel-example.h"
   2:../../../applications/examples/batterylevel-example/src/batterylevel-example.c **** #include "stc3115.h"
   3:../../../applications/examples/batterylevel-example/src/batterylevel-example.c **** 
   4:../../../applications/examples/batterylevel-example/src/batterylevel-example.c **** #define IWDG_INTERVAL                   5         //seconds
   5:../../../applications/examples/batterylevel-example/src/batterylevel-example.c **** #define BATTERYLEVEL_INTERVAL           60        //seconds
   6:../../../applications/examples/batterylevel-example/src/batterylevel-example.c **** 
   7:../../../applications/examples/batterylevel-example/src/batterylevel-example.c **** STC3115_ConfigData_TypeDef STC3115_ConfigData;
   8:../../../applications/examples/batterylevel-example/src/batterylevel-example.c **** STC3115_BatteryData_TypeDef STC3115_BatteryData;
   9:../../../applications/examples/batterylevel-example/src/batterylevel-example.c **** 
  10:../../../applications/examples/batterylevel-example/src/batterylevel-example.c **** int main(void)
  11:../../../applications/examples/batterylevel-example/src/batterylevel-example.c **** {
  12:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   Initialize_Platform();
  13:../../../applications/examples/batterylevel-example/src/batterylevel-example.c **** 
  14:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   // Battery monitoring
  15:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   GasGauge_Initialization(&common_I2C, &STC3115_ConfigData, &STC3115_BatteryData);
  16:../../../applications/examples/batterylevel-example/src/batterylevel-example.c **** 
  17:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   //feed IWDG every 5 seconds
  18:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   IWDG_feed(NULL);
  19:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   osTimerDef(iwdgTim, IWDG_feed);
  20:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   iwdgTimId = osTimerCreate(osTimer(iwdgTim), osTimerPeriodic, NULL);
ARM GAS  C:\Users\tomra\AppData\Local\Temp\ccHtz0ep.s 			page 2


  21:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   osTimerStart(iwdgTimId, IWDG_INTERVAL * 1000);
  22:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   
  23:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   osTimerDef(batteryLevel_Tim, batteryLevel_measurement);
  24:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   batteryTimId = osTimerCreate(osTimer(batteryLevel_Tim), osTimerPeriodic, NULL);
  25:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   osTimerStart(batteryTimId, BATTERYLEVEL_INTERVAL * 1000);
  26:../../../applications/examples/batterylevel-example/src/batterylevel-example.c **** 
  27:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   osKernelStart();
  28:../../../applications/examples/batterylevel-example/src/batterylevel-example.c **** 
  29:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   while (1)
  30:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   {
  31:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   }
  32:../../../applications/examples/batterylevel-example/src/batterylevel-example.c **** }
  33:../../../applications/examples/batterylevel-example/src/batterylevel-example.c **** 
  34:../../../applications/examples/batterylevel-example/src/batterylevel-example.c **** void batteryLevel_measurement(void const *argument)
  35:../../../applications/examples/batterylevel-example/src/batterylevel-example.c **** {
  35              		.loc 1 35 1 view -0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              		.loc 1 35 1 is_stmt 0 view .LVU1
  40 0000 10B5     		push	{r4, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 4, -8
  44              		.cfi_offset 14, -4
  45 0002 84B0     		sub	sp, sp, #16
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 24
  36:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   GasGauge_Task(&STC3115_ConfigData, &STC3115_BatteryData);
  48              		.loc 1 36 3 is_stmt 1 view .LVU2
  49 0004 0A4C     		ldr	r4, .L3
  50 0006 2146     		mov	r1, r4
  51 0008 0A48     		ldr	r0, .L3+4
  52              	.LVL1:
  53              		.loc 1 36 3 is_stmt 0 view .LVU3
  54 000a FFF7FEFF 		bl	GasGauge_Task
  55              	.LVL2:
  37:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   printINF("Vbat: %i mV, I=%i mA SoC=%i, C=%i, P=%i A=%i , CC=%d\r\n",
  56              		.loc 1 37 3 is_stmt 1 view .LVU4
  38:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****          STC3115_BatteryData.Voltage,
  39:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****          STC3115_BatteryData.Current,
  40:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****          STC3115_BatteryData.SOC,
  41:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****          STC3115_BatteryData.ChargeValue,
  42:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****          STC3115_BatteryData.Presence,
  43:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****          STC3115_BatteryData.StatusWord >> 13,
  57              		.loc 1 43 29 is_stmt 0 view .LVU5
  58 000e 2368     		ldr	r3, [r4]
  37:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   printINF("Vbat: %i mV, I=%i mA SoC=%i, C=%i, P=%i A=%i , CC=%d\r\n",
  59              		.loc 1 37 3 view .LVU6
  60 0010 A269     		ldr	r2, [r4, #24]
  61 0012 0392     		str	r2, [sp, #12]
  62 0014 5B13     		asrs	r3, r3, #13
  63 0016 0293     		str	r3, [sp, #8]
  64 0018 236A     		ldr	r3, [r4, #32]
  65 001a 0193     		str	r3, [sp, #4]
  66 001c 636A     		ldr	r3, [r4, #36]
  67 001e 0093     		str	r3, [sp]
ARM GAS  C:\Users\tomra\AppData\Local\Temp\ccHtz0ep.s 			page 3


  68 0020 A368     		ldr	r3, [r4, #8]
  69 0022 2269     		ldr	r2, [r4, #16]
  70 0024 E168     		ldr	r1, [r4, #12]
  71 0026 0448     		ldr	r0, .L3+8
  72 0028 FFF7FEFF 		bl	printINF
  73              	.LVL3:
  44:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****          STC3115_BatteryData.ConvCounter);
  45:../../../applications/examples/batterylevel-example/src/batterylevel-example.c **** }...
  74              		.loc 1 45 1 view .LVU7
  75 002c 04B0     		add	sp, sp, #16
  76              	.LCFI2:
  77              		.cfi_def_cfa_offset 8
  78              		@ sp needed
  79 002e 10BD     		pop	{r4, pc}
  80              	.L4:
  81              		.align	2
  82              	.L3:
  83 0030 00000000 		.word	STC3115_BatteryData
  84 0034 00000000 		.word	STC3115_ConfigData
  85 0038 00000000 		.word	.LC0
  86              		.cfi_endproc
  87              	.LFE132:
  89              		.section	.text.main,"ax",%progbits
  90              		.align	1
  91              		.global	main
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  95              		.fpu fpv4-sp-d16
  97              	main:
  98              	.LFB131:
  11:../../../applications/examples/batterylevel-example/src/batterylevel-example.c **** {
  99              		.loc 1 11 1 is_stmt 1 view -0
 100              		.cfi_startproc
 101              		@ Volatile: function does not return.
 102              		@ args = 0, pretend = 0, frame = 8
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104 0000 00B5     		push	{lr}
 105              	.LCFI3:
 106              		.cfi_def_cfa_offset 4
 107              		.cfi_offset 14, -4
 108 0002 83B0     		sub	sp, sp, #12
 109              	.LCFI4:
 110              		.cfi_def_cfa_offset 16
  12:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   Initialize_Platform();
 111              		.loc 1 12 3 view .LVU9
 112 0004 FFF7FEFF 		bl	Initialize_Platform
 113              	.LVL4:
  15:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   GasGauge_Initialization(&common_I2C, &STC3115_ConfigData, &STC3115_BatteryData);
 114              		.loc 1 15 3 view .LVU10
 115 0008 124A     		ldr	r2, .L8
 116 000a 1349     		ldr	r1, .L8+4
 117 000c 1348     		ldr	r0, .L8+8
 118 000e FFF7FEFF 		bl	GasGauge_Initialization
 119              	.LVL5:
  18:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   IWDG_feed(NULL);
 120              		.loc 1 18 3 view .LVU11
ARM GAS  C:\Users\tomra\AppData\Local\Temp\ccHtz0ep.s 			page 4


 121 0012 0020     		movs	r0, #0
 122 0014 FFF7FEFF 		bl	IWDG_feed
 123              	.LVL6:
  19:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   osTimerDef(iwdgTim, IWDG_feed);
 124              		.loc 1 19 3 view .LVU12
 125 0018 114B     		ldr	r3, .L8+12
 126 001a 0193     		str	r3, [sp, #4]
  20:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   iwdgTimId = osTimerCreate(osTimer(iwdgTim), osTimerPeriodic, NULL);
 127              		.loc 1 20 3 view .LVU13
  20:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   iwdgTimId = osTimerCreate(osTimer(iwdgTim), osTimerPeriodic, NULL);
 128              		.loc 1 20 15 is_stmt 0 view .LVU14
 129 001c 0022     		movs	r2, #0
 130 001e 0121     		movs	r1, #1
 131 0020 01A8     		add	r0, sp, #4
 132 0022 FFF7FEFF 		bl	osTimerCreate
 133              	.LVL7:
  20:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   iwdgTimId = osTimerCreate(osTimer(iwdgTim), osTimerPeriodic, NULL);
 134              		.loc 1 20 13 view .LVU15
 135 0026 0F4B     		ldr	r3, .L8+16
 136 0028 1860     		str	r0, [r3]
  21:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   osTimerStart(iwdgTimId, IWDG_INTERVAL * 1000);
 137              		.loc 1 21 3 is_stmt 1 view .LVU16
 138 002a 41F28831 		movw	r1, #5000
 139 002e FFF7FEFF 		bl	osTimerStart
 140              	.LVL8:
  23:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   osTimerDef(batteryLevel_Tim, batteryLevel_measurement);
 141              		.loc 1 23 3 view .LVU17
 142 0032 0D4B     		ldr	r3, .L8+20
 143 0034 0093     		str	r3, [sp]
  24:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   batteryTimId = osTimerCreate(osTimer(batteryLevel_Tim), osTimerPeriodic, NULL);
 144              		.loc 1 24 3 view .LVU18
  24:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   batteryTimId = osTimerCreate(osTimer(batteryLevel_Tim), osTimerPeriodic, NULL);
 145              		.loc 1 24 18 is_stmt 0 view .LVU19
 146 0036 0022     		movs	r2, #0
 147 0038 0121     		movs	r1, #1
 148 003a 6846     		mov	r0, sp
 149 003c FFF7FEFF 		bl	osTimerCreate
 150              	.LVL9:
  24:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   batteryTimId = osTimerCreate(osTimer(batteryLevel_Tim), osTimerPeriodic, NULL);
 151              		.loc 1 24 16 view .LVU20
 152 0040 0A4B     		ldr	r3, .L8+24
 153 0042 1860     		str	r0, [r3]
  25:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   osTimerStart(batteryTimId, BATTERYLEVEL_INTERVAL * 1000);
 154              		.loc 1 25 3 is_stmt 1 view .LVU21
 155 0044 4EF66021 		movw	r1, #60000
 156 0048 FFF7FEFF 		bl	osTimerStart
 157              	.LVL10:
  27:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   osKernelStart();
 158              		.loc 1 27 3 view .LVU22
 159 004c FFF7FEFF 		bl	osKernelStart
 160              	.LVL11:
 161              	.L6:
  29:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   while (1)
 162              		.loc 1 29 3 discriminator 1 view .LVU23
  31:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   }
 163              		.loc 1 31 3 discriminator 1 view .LVU24
  29:../../../applications/examples/batterylevel-example/src/batterylevel-example.c ****   while (1)
ARM GAS  C:\Users\tomra\AppData\Local\Temp\ccHtz0ep.s 			page 5


 164              		.loc 1 29 9 discriminator 1 view .LVU25
 165 0050 FEE7     		b	.L6
 166              	.L9:
 167 0052 00BF     		.align	2
 168              	.L8:
 169 0054 00000000 		.word	STC3115_BatteryData
 170 0058 00000000 		.word	STC3115_ConfigData
 171 005c 00000000 		.word	common_I2C
 172 0060 00000000 		.word	IWDG_feed
 173 0064 00000000 		.word	iwdgTimId
 174 0068 00000000 		.word	batteryLevel_measurement
 175 006c 00000000 		.word	batteryTimId
 176              		.cfi_endproc
 177              	.LFE131:
 179              		.comm	STC3115_BatteryData,44,4
 180              		.comm	STC3115_ConfigData,48,4
 181              		.comm	batteryTimId,4,4
 182              		.comm	iwdgTimId,4,4
 183              		.comm	P3_header,44,4
 184              		.comm	P2_header,44,4
 185              		.comm	P1_header,44,4
 186              		.comm	stackversion_patch,1,1
 187              		.comm	stackversion_minor,1,1
 188              		.comm	stackversion_major,1,1
 189              		.comm	appversion_patch,1,1
 190              		.comm	appversion_minor,1,1
 191              		.comm	appversion_major,1,1
 192              		.comm	short_UID,8,8
 193              		.comm	hard_reset,1,1
 194              		.comm	wd_reset,1,1
 195              		.comm	octa_uid,8,8
 196              		.comm	float_union,4,4
 197              		.comm	uint16LittleEndian,2,4
 198              		.comm	int16LittleEndian,2,4
 199              		.comm	uint32LittleEndian,4,4
 200              		.comm	int32LittleEndian,4,4
 201              		.comm	rtosprintHandle,4,4
 202              		.comm	hrtc,36,4
 203              		.comm	FLASH_SPI,100,4
 204              		.comm	P3_SPI,100,4
 205              		.comm	P2_SPI,100,4
 206              		.comm	P1_SPI,100,4
 207              		.comm	P3_I2C,76,4
 208              		.comm	P2_I2C,76,4
 209              		.comm	P1_I2C,76,4
 210              		.comm	common_I2C,76,4
 211              		.comm	P3_UART,120,4
 212              		.comm	P2_UART,120,4
 213              		.comm	P1_UART,120,4
 214              		.comm	FTDI_UART,120,4
 215              		.comm	BLE_UART,120,4
 216              		.comm	USB_UART,120,4
 217              		.comm	hiwdg,16,4
 218              		.comm	P3_DIO6,8,4
 219              		.comm	P3_DIO5,8,4
 220              		.comm	P3_DIO4,8,4
 221              		.comm	P3_DIO3,8,4
ARM GAS  C:\Users\tomra\AppData\Local\Temp\ccHtz0ep.s 			page 6


 222              		.comm	P3_DIO2,8,4
 223              		.comm	P3_DIO1,8,4
 224              		.comm	P2_DIO6,8,4
 225              		.comm	P2_DIO5,8,4
 226              		.comm	P2_DIO4,8,4
 227              		.comm	P2_DIO3,8,4
 228              		.comm	P2_DIO2,8,4
 229              		.comm	P2_DIO1,8,4
 230              		.comm	P1_DIO6,8,4
 231              		.comm	P1_DIO5,8,4
 232              		.comm	P1_DIO4,8,4
 233              		.comm	P1_DIO3,8,4
 234              		.comm	P1_DIO2,8,4
 235              		.comm	P1_DIO1,8,4
 236              		.comm	htim6,64,4
 237              		.comm	htim1,64,4
 238              		.text
 239              	.Letext0:
 240              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 241              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 242              		.file 4 "../../../core/ST/CMSIS/Include/core_cm4.h"
 243              		.file 5 "../../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 244              		.file 6 "../../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/stm32l496xx.h"
 245              		.file 7 "../../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 246              		.file 8 "../../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 247              		.file 9 "../../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_i2c.h"
 248              		.file 10 "../../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_iwdg.h"
 249              		.file 11 "../../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rtc.h"
 250              		.file 12 "../../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_spi.h"
 251              		.file 13 "../../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 252              		.file 14 "../../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 253              		.file 15 "../../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 254              		.file 16 "../../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 255              		.file 17 "../../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/include/timers.h"
 256              		.file 18 "../../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 257              		.file 19 "../../../core/platform/octa/inc/sysclock.h"
 258              		.file 20 "../../../core/platform/octa/inc/gpio.h"
 259              		.file 21 "../../../core/platform/octa/inc/iwdg.h"
 260              		.file 22 "../../../core/platform/octa/inc/uart.h"
 261              		.file 23 "../../../core/platform/octa/inc/i2c.h"
 262              		.file 24 "../../../core/platform/octa/inc/spi.h"
 263              		.file 25 "../../../core/platform/octa/inc/rtc.h"
 264              		.file 26 "../../../core/platform/octa/inc/rtosincludes.h"
 265              		.file 27 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 266              		.file 28 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 267              		.file 29 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\lib\\gcc\\arm-none-eab
 268              		.file 30 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 269              		.file 31 "../../../core/platform/common/inc/datatypes.h"
 270              		.file 32 "../../../core/platform/octa/inc/platform.h"
 271              		.file 33 "../../../applications/examples/batterylevel-example/inc/batterylevel-example.h"
 272              		.file 34 "../../../core/platform/octa/drivers/STC3115/inc/stc3115.h"
 273              		.file 35 "../../../core/platform/common/inc/print.h"
ARM GAS  C:\Users\tomra\AppData\Local\Temp\ccHtz0ep.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 batterylevel-example.c
C:\Users\tomra\AppData\Local\Temp\ccHtz0ep.s:18     .rodata.batteryLevel_measurement.str1.4:00000000 $d
C:\Users\tomra\AppData\Local\Temp\ccHtz0ep.s:23     .text.batteryLevel_measurement:00000000 $t
C:\Users\tomra\AppData\Local\Temp\ccHtz0ep.s:31     .text.batteryLevel_measurement:00000000 batteryLevel_measurement
C:\Users\tomra\AppData\Local\Temp\ccHtz0ep.s:83     .text.batteryLevel_measurement:00000030 $d
                            *COM*:0000002c STC3115_BatteryData
                            *COM*:00000030 STC3115_ConfigData
C:\Users\tomra\AppData\Local\Temp\ccHtz0ep.s:90     .text.main:00000000 $t
C:\Users\tomra\AppData\Local\Temp\ccHtz0ep.s:97     .text.main:00000000 main
C:\Users\tomra\AppData\Local\Temp\ccHtz0ep.s:169    .text.main:00000054 $d
                            *COM*:0000004c common_I2C
                            *COM*:00000004 iwdgTimId
                            *COM*:00000004 batteryTimId
                            *COM*:0000002c P3_header
                            *COM*:0000002c P2_header
                            *COM*:0000002c P1_header
                            *COM*:00000001 stackversion_patch
                            *COM*:00000001 stackversion_minor
                            *COM*:00000001 stackversion_major
                            *COM*:00000001 appversion_patch
                            *COM*:00000001 appversion_minor
                            *COM*:00000001 appversion_major
                            *COM*:00000008 short_UID
                            *COM*:00000001 hard_reset
                            *COM*:00000001 wd_reset
                            *COM*:00000008 octa_uid
                            *COM*:00000004 float_union
                            *COM*:00000002 uint16LittleEndian
                            *COM*:00000002 int16LittleEndian
                            *COM*:00000004 uint32LittleEndian
                            *COM*:00000004 int32LittleEndian
                            *COM*:00000004 rtosprintHandle
                            *COM*:00000024 hrtc
                            *COM*:00000064 FLASH_SPI
                            *COM*:00000064 P3_SPI
                            *COM*:00000064 P2_SPI
                            *COM*:00000064 P1_SPI
                            *COM*:0000004c P3_I2C
                            *COM*:0000004c P2_I2C
                            *COM*:0000004c P1_I2C
                            *COM*:00000078 P3_UART
                            *COM*:00000078 P2_UART
                            *COM*:00000078 P1_UART
                            *COM*:00000078 FTDI_UART
                            *COM*:00000078 BLE_UART
                            *COM*:00000078 USB_UART
                            *COM*:00000010 hiwdg
                            *COM*:00000008 P3_DIO6
                            *COM*:00000008 P3_DIO5
                            *COM*:00000008 P3_DIO4
                            *COM*:00000008 P3_DIO3
                            *COM*:00000008 P3_DIO2
                            *COM*:00000008 P3_DIO1
                            *COM*:00000008 P2_DIO6
                            *COM*:00000008 P2_DIO5
                            *COM*:00000008 P2_DIO4
ARM GAS  C:\Users\tomra\AppData\Local\Temp\ccHtz0ep.s 			page 8


                            *COM*:00000008 P2_DIO3
                            *COM*:00000008 P2_DIO2
                            *COM*:00000008 P2_DIO1
                            *COM*:00000008 P1_DIO6
                            *COM*:00000008 P1_DIO5
                            *COM*:00000008 P1_DIO4
                            *COM*:00000008 P1_DIO3
                            *COM*:00000008 P1_DIO2
                            *COM*:00000008 P1_DIO1
                            *COM*:00000040 htim6
                            *COM*:00000040 htim1

UNDEFINED SYMBOLS
GasGauge_Task
printINF
Initialize_Platform
GasGauge_Initialization
IWDG_feed
osTimerCreate
osTimerStart
osKernelStart
