ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_pwr.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_PWR_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_PWR_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_PWR_DeInit:
  27              	.LFB123:
  28              		.file 1 "../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c"
   1:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
   2:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   ******************************************************************************
   3:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @file    stm32l4xx_hal_pwr.c
   4:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @author  MCD Application Team
   5:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief   PWR HAL module driver.
   6:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *          This file provides firmware functions to manage the following
   7:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *          functionalities of the Power Controller (PWR) peripheral:
   8:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           + Initialization/de-initialization functions
   9:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           + Peripheral Control functions
  10:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *
  11:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   ******************************************************************************
  12:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @attention
  13:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *
  14:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  15:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *
  16:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * Redistribution and use in source and binary forms, with or without modification,
  17:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * are permitted provided that the following conditions are met:
  18:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  19:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *      this list of conditions and the following disclaimer.
  20:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  21:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *      this list of conditions and the following disclaimer in the documentation
  22:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *      and/or other materials provided with the distribution.
  23:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  24:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *      may be used to endorse or promote products derived from this software
  25:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *      without specific prior written permission.
  26:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *
  27:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  28:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  29:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  30:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 2


  31:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  32:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  33:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  34:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  35:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  36:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  37:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *
  38:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   ******************************************************************************
  39:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  40:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  41:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* Includes ------------------------------------------------------------------*/
  42:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #include "stm32l4xx_hal.h"
  43:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  44:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /** @addtogroup STM32L4xx_HAL_Driver
  45:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @{
  46:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  47:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  48:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /** @defgroup PWR PWR
  49:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief PWR HAL module driver
  50:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @{
  51:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  52:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  53:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #ifdef HAL_PWR_MODULE_ENABLED
  54:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  55:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* Private typedef -----------------------------------------------------------*/
  56:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* Private define ------------------------------------------------------------*/
  57:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  58:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /** @defgroup PWR_Private_Defines PWR Private Defines
  59:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @{
  60:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  61:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  62:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /** @defgroup PWR_PVD_Mode_Mask PWR PVD Mode Mask
  63:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @{
  64:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  65:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #define PVD_MODE_IT               ((uint32_t)0x00010000)  /*!< Mask for interruption yielded by PVD
  66:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #define PVD_MODE_EVT              ((uint32_t)0x00020000)  /*!< Mask for event yielded by PVD thresh
  67:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #define PVD_RISING_EDGE           ((uint32_t)0x00000001)  /*!< Mask for rising edge set as PVD trig
  68:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #define PVD_FALLING_EDGE          ((uint32_t)0x00000002)  /*!< Mask for falling edge set as PVD tri
  69:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
  70:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @}
  71:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  72:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  73:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
  74:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @}
  75:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  76:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  77:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* Private macro -------------------------------------------------------------*/
  78:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* Private variables ---------------------------------------------------------*/
  79:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* Private function prototypes -----------------------------------------------*/
  80:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* Exported functions --------------------------------------------------------*/
  81:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  82:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions PWR Exported Functions
  83:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @{
  84:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  85:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  86:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group1 Initialization and de-initialization functions
  87:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *  @brief    Initialization and de-initialization functions
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 3


  88:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *
  89:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** @verbatim
  90:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****  ===============================================================================
  91:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****               ##### Initialization and de-initialization functions #####
  92:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****  ===============================================================================
  93:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
  94:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  95:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** @endverbatim
  96:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @{
  97:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  98:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  99:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 100:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Deinitialize the HAL PWR peripheral registers to their default reset values.
 101:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 102:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 103:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_DeInit(void)
 104:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
  29              		.loc 1 104 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 105:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __HAL_RCC_PWR_FORCE_RESET();
  34              		.loc 1 105 3 view .LVU1
  35 0000 044B     		ldr	r3, .L2
  36 0002 9A6B     		ldr	r2, [r3, #56]
  37 0004 42F08052 		orr	r2, r2, #268435456
  38 0008 9A63     		str	r2, [r3, #56]
 106:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __HAL_RCC_PWR_RELEASE_RESET();
  39              		.loc 1 106 3 view .LVU2
  40 000a 9A6B     		ldr	r2, [r3, #56]
  41 000c 22F08052 		bic	r2, r2, #268435456
  42 0010 9A63     		str	r2, [r3, #56]
 107:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
  43              		.loc 1 107 1 is_stmt 0 view .LVU3
  44 0012 7047     		bx	lr
  45              	.L3:
  46              		.align	2
  47              	.L2:
  48 0014 00100240 		.word	1073876992
  49              		.cfi_endproc
  50              	.LFE123:
  52              		.section	.text.HAL_PWR_EnableBkUpAccess,"ax",%progbits
  53              		.align	1
  54              		.global	HAL_PWR_EnableBkUpAccess
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  58              		.fpu fpv4-sp-d16
  60              	HAL_PWR_EnableBkUpAccess:
  61              	.LFB124:
 108:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 109:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 110:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Enable access to the backup domain
 111:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        (RTC registers, RTC backup data registers).
 112:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  After reset, the backup domain is protected against
 113:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        possible unwanted write accesses.
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 4


 114:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  RTCSEL that sets the RTC clock source selection is in the RTC back-up domain.
 115:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        In order to set or modify the RTC clock, the backup domain access must be
 116:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        disabled.
 117:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  LSEON bit that switches on and off the LSE crystal belongs as well to the
 118:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        back-up domain.
 119:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 120:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 121:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnableBkUpAccess(void)
 122:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
  62              		.loc 1 122 1 is_stmt 1 view -0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
 123:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   SET_BIT(PWR->CR1, PWR_CR1_DBP);
  67              		.loc 1 123 3 view .LVU5
  68 0000 024A     		ldr	r2, .L5
  69 0002 1368     		ldr	r3, [r2]
  70 0004 43F48073 		orr	r3, r3, #256
  71 0008 1360     		str	r3, [r2]
 124:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
  72              		.loc 1 124 1 is_stmt 0 view .LVU6
  73 000a 7047     		bx	lr
  74              	.L6:
  75              		.align	2
  76              	.L5:
  77 000c 00700040 		.word	1073770496
  78              		.cfi_endproc
  79              	.LFE124:
  81              		.section	.text.HAL_PWR_DisableBkUpAccess,"ax",%progbits
  82              		.align	1
  83              		.global	HAL_PWR_DisableBkUpAccess
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv4-sp-d16
  89              	HAL_PWR_DisableBkUpAccess:
  90              	.LFB125:
 125:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 126:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 127:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Disable access to the backup domain
 128:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        (RTC registers, RTC backup data registers).
 129:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 130:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 131:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_DisableBkUpAccess(void)
 132:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
  91              		.loc 1 132 1 is_stmt 1 view -0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
 133:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   CLEAR_BIT(PWR->CR1, PWR_CR1_DBP);
  96              		.loc 1 133 3 view .LVU8
  97 0000 024A     		ldr	r2, .L8
  98 0002 1368     		ldr	r3, [r2]
  99 0004 23F48073 		bic	r3, r3, #256
 100 0008 1360     		str	r3, [r2]
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 5


 134:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 101              		.loc 1 134 1 is_stmt 0 view .LVU9
 102 000a 7047     		bx	lr
 103              	.L9:
 104              		.align	2
 105              	.L8:
 106 000c 00700040 		.word	1073770496
 107              		.cfi_endproc
 108              	.LFE125:
 110              		.section	.rodata.HAL_PWR_ConfigPVD.str1.4,"aMS",%progbits,1
 111              		.align	2
 112              	.LC0:
 113 0000 2E2E2F2E 		.ascii	"../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx"
 113      2E2F2E2E 
 113      2F636F72 
 113      652F5354 
 113      2F53544D 
 114 0033 5F68616C 		.ascii	"_hal_pwr.c\000"
 114      5F707772 
 114      2E6300
 115              		.section	.text.HAL_PWR_ConfigPVD,"ax",%progbits
 116              		.align	1
 117              		.global	HAL_PWR_ConfigPVD
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu fpv4-sp-d16
 123              	HAL_PWR_ConfigPVD:
 124              	.LVL0:
 125              	.LFB126:
 135:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 136:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 137:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 138:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 139:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 140:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @}
 141:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 142:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 143:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 144:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 145:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group2 Peripheral Control functions
 146:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *  @brief Low Power modes configuration functions
 147:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *
 148:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** @verbatim
 149:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 150:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****  ===============================================================================
 151:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                  ##### Peripheral Control functions #####
 152:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****  ===============================================================================
 153:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 154:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****      [..]
 155:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****      *** PVD configuration ***
 156:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     =========================
 157:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
 158:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) The PVD is used to monitor the VDD power supply by comparing it to a
 159:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           threshold selected by the PVD Level (PLS[2:0] bits in PWR_CR2 register).
 160:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 161:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) PVDO flag is available to indicate if VDD/VDDA is higher or lower
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 6


 162:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           than the PVD threshold. This event is internally connected to the EXTI
 163:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           line16 and can generate an interrupt if enabled. This is done through
 164:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           __HAL_PVD_EXTI_ENABLE_IT() macro.
 165:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) The PVD is stopped in Standby mode.
 166:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 167:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 168:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     *** WakeUp pin configuration ***
 169:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     ================================
 170:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
 171:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) WakeUp pins are used to wakeup the system from Standby mode or Shutdown mode.
 172:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           The polarity of these pins can be set to configure event detection on high
 173:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           level (rising edge) or low level (falling edge).
 174:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 175:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 176:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 177:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     *** Low Power modes configuration ***
 178:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     =====================================
 179:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
 180:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       The devices feature 8 low-power modes:
 181:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Low-power Run mode: core and peripherals are running, main regulator off, low power regul
 182:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Sleep mode: Cortex-M4 core stopped, peripherals kept running, main and low power regulato
 183:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Low-power Sleep mode: Cortex-M4 core stopped, peripherals kept running, main regulator of
 184:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Stop 0 mode: all clocks are stopped except LSI and LSE, main and low power regulators on.
 185:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Stop 1 mode: all clocks are stopped except LSI and LSE, main regulator off, low power reg
 186:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Stop 2 mode: all clocks are stopped except LSI and LSE, main regulator off, low power reg
 187:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Standby mode with SRAM2: all clocks are stopped except LSI and LSE, SRAM2 content preserv
 188:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Standby mode without SRAM2: all clocks are stopped except LSI and LSE, main and low power
 189:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Shutdown mode: all clocks are stopped except LSE, main and low power regulators off.
 190:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 191:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 192:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    *** Low-power run mode ***
 193:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    ==========================
 194:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
 195:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Entry: (from main run mode)
 196:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         (++) set LPR bit with HAL_PWREx_EnableLowPowerRunMode() API after having decreased the syst
 197:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 198:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Exit:
 199:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         (++) clear LPR bit then wait for REGLP bit to be reset with HAL_PWREx_DisableLowPowerRunMod
 200:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****              then can the system clock frequency be increased above 2 MHz.
 201:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 202:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 203:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    *** Sleep mode / Low-power sleep mode ***
 204:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    =========================================
 205:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
 206:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Entry:
 207:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           The Sleep mode / Low-power Sleep mode is entered thru HAL_PWR_EnterSLEEPMode() API
 208:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           in specifying whether or not the regulator is forced to low-power mode and if exit is int
 209:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_MAINREGULATOR_ON: Sleep mode (regulator in main mode).
 210:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_LOWPOWERREGULATOR_ON: Low-power sleep (regulator in low power mode).
 211:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           In the latter case, the system clock frequency must have been decreased below 2 MHz befor
 212:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFI: enter SLEEP mode with WFI instruction
 213:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFE: enter SLEEP mode with WFE instruction
 214:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 215:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) WFI Exit:
 216:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         (++) Any peripheral interrupt acknowledged by the nested vectored interrupt
 217:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****              controller (NVIC) or any wake-up event.
 218:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 7


 219:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) WFE Exit:
 220:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         (++) Any wake-up event such as an EXTI line configured in event mode.
 221:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 222:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****          [..] When exiting the Low-power sleep mode by issuing an interrupt or a wakeup event,
 223:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****              the MCU is in Low-power Run mode.
 224:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 225:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    *** Stop 0, Stop 1 and Stop 2 modes ***
 226:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    ===============================
 227:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
 228:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Entry:
 229:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           The Stop 0, Stop 1 or Stop 2 modes are entered thru the following API's:
 230:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) HAL_PWREx_EnterSTOP0Mode() for mode 0 or HAL_PWREx_EnterSTOP1Mode() for mode 1 or fo
 231:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) HAL_PWREx_EnterSTOP2Mode() for mode 2.
 232:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Regulator setting (applicable to HAL_PWR_EnterSTOPMode() only):
 233:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_MAINREGULATOR_ON
 234:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_LOWPOWERREGULATOR_ON
 235:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Exit (interrupt or event-triggered, specified when entering STOP mode):
 236:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_STOPENTRY_WFI: enter Stop mode with WFI instruction
 237:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_STOPENTRY_WFE: enter Stop mode with WFE instruction
 238:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 239:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) WFI Exit:
 240:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) Any EXTI Line (Internal or External) configured in Interrupt mode.
 241:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) Some specific communication peripherals (USART, LPUART, I2C) interrupts
 242:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                when programmed in wakeup mode.
 243:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) WFE Exit:
 244:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) Any EXTI Line (Internal or External) configured in Event mode.
 245:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 246:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****        [..]
 247:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           When exiting Stop 0 and Stop 1 modes, the MCU is either in Run mode or in Low-power Run m
 248:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           depending on the LPR bit setting.
 249:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           When exiting Stop 2 mode, the MCU is in Run mode.
 250:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 251:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    *** Standby mode ***
 252:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    ====================
 253:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****      [..]
 254:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       The Standby mode offers two options:
 255:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) option a) all clocks off except LSI and LSE, RRS bit set (keeps voltage regulator in low 
 256:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         SRAM and registers contents are lost except for the SRAM2 content, the RTC registers, RTC b
 257:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         and Standby circuitry.
 258:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) option b) all clocks off except LSI and LSE, RRS bit cleared (voltage regulator then disa
 259:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         SRAM and register contents are lost except for the RTC registers, RTC backup registers
 260:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         and Standby circuitry.
 261:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 262:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (++) Entry:
 263:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (+++) The Standby mode is entered thru HAL_PWR_EnterSTANDBYMode() API.
 264:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                 SRAM1 and register contents are lost except for registers in the Backup domain and
 265:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                 Standby circuitry. SRAM2 content can be preserved if the bit RRS is set in PWR_CR3 
 266:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                 To enable this feature, the user can resort to HAL_PWREx_EnableSRAM2ContentRetentio
 267:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                 to set RRS bit.
 268:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 269:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (++) Exit:
 270:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (+++) WKUP pin rising edge, RTC alarm or wakeup, tamper event, time-stamp event,
 271:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                 external reset in NRST pin, IWDG reset.
 272:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 273:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       [..]    After waking up from Standby mode, program execution restarts in the same way as afte
 274:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 275:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 8


 276:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     *** Shutdown mode ***
 277:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    ======================
 278:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****      [..]
 279:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       In Shutdown mode,
 280:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         voltage regulator is disabled, all clocks are off except LSE, RRS bit is cleared.
 281:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         SRAM and registers contents are lost except for backup domain registers.
 282:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 283:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Entry:
 284:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           The Shutdown mode is entered thru HAL_PWREx_EnterSHUTDOWNMode() API.
 285:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 286:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Exit:
 287:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) WKUP pin rising edge, RTC alarm or wakeup, tamper event, time-stamp event,
 288:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                external reset in NRST pin.
 289:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 290:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****          [..] After waking up from Shutdown mode, program execution restarts in the same way as aft
 291:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 292:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 293:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    *** Auto-wakeup (AWU) from low-power mode ***
 294:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    =============================================
 295:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
 296:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       The MCU can be woken up from low-power mode by an RTC Alarm event, an RTC
 297:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       Wakeup event, a tamper event or a time-stamp event, without depending on
 298:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       an external interrupt (Auto-wakeup mode).
 299:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 300:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) RTC auto-wakeup (AWU) from the Stop, Standby and Shutdown modes
 301:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 302:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 303:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC alarm event, it is necessary to
 304:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****              configure the RTC to generate the RTC alarm using the HAL_RTC_SetAlarm_IT() function.
 305:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 306:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC Tamper or time stamp event, it
 307:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****              is necessary to configure the RTC to detect the tamper or time stamp event using the
 308:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****              HAL_RTCEx_SetTimeStamp_IT() or HAL_RTCEx_SetTamper_IT() functions.
 309:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 310:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC WakeUp event, it is necessary to
 311:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****               configure the RTC to generate the RTC WakeUp event using the HAL_RTCEx_SetWakeUpTimer
 312:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 313:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** @endverbatim
 314:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @{
 315:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 316:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 317:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 318:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 319:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 320:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Configure the voltage threshold detected by the Power Voltage Detector (PVD).
 321:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @param sConfigPVD: pointer to a PWR_PVDTypeDef structure that contains the PVD
 322:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        configuration information.
 323:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note Refer to the electrical characteristics of your device datasheet for
 324:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         more details about the voltage thresholds corresponding to each
 325:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         detection level.
 326:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 327:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 328:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** HAL_StatusTypeDef HAL_PWR_ConfigPVD(PWR_PVDTypeDef *sConfigPVD)
 329:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 126              		.loc 1 329 1 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 9


 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		.loc 1 329 1 is_stmt 0 view .LVU11
 131 0000 10B5     		push	{r4, lr}
 132              	.LCFI0:
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 4, -8
 135              		.cfi_offset 14, -4
 136 0002 0446     		mov	r4, r0
 330:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Check the parameters */
 331:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_LEVEL(sConfigPVD->PVDLevel));
 137              		.loc 1 331 3 is_stmt 1 view .LVU12
 138 0004 0368     		ldr	r3, [r0]
 139 0006 6BB1     		cbz	r3, .L11
 140              		.loc 1 331 3 is_stmt 0 discriminator 1 view .LVU13
 141 0008 022B     		cmp	r3, #2
 142 000a 0BD0     		beq	.L11
 143              		.loc 1 331 3 discriminator 2 view .LVU14
 144 000c 042B     		cmp	r3, #4
 145 000e 09D0     		beq	.L11
 146              		.loc 1 331 3 discriminator 3 view .LVU15
 147 0010 062B     		cmp	r3, #6
 148 0012 07D0     		beq	.L11
 149              		.loc 1 331 3 discriminator 4 view .LVU16
 150 0014 082B     		cmp	r3, #8
 151 0016 05D0     		beq	.L11
 152              		.loc 1 331 3 discriminator 5 view .LVU17
 153 0018 0A2B     		cmp	r3, #10
 154 001a 03D0     		beq	.L11
 155              		.loc 1 331 3 discriminator 6 view .LVU18
 156 001c 0C2B     		cmp	r3, #12
 157 001e 01D0     		beq	.L11
 158              		.loc 1 331 3 discriminator 7 view .LVU19
 159 0020 0E2B     		cmp	r3, #14
 160 0022 51D1     		bne	.L18
 161              	.LVL1:
 162              	.L11:
 332:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_MODE(sConfigPVD->Mode));
 163              		.loc 1 332 3 is_stmt 1 view .LVU20
 164 0024 6368     		ldr	r3, [r4, #4]
 165 0026 8BB1     		cbz	r3, .L12
 166              		.loc 1 332 3 is_stmt 0 discriminator 1 view .LVU21
 167 0028 B3F1011F 		cmp	r3, #65537
 168 002c 0ED0     		beq	.L12
 169              		.loc 1 332 3 discriminator 2 view .LVU22
 170 002e 2C4A     		ldr	r2, .L20
 171 0030 9342     		cmp	r3, r2
 172 0032 0BD0     		beq	.L12
 173              		.loc 1 332 3 discriminator 3 view .LVU23
 174 0034 0132     		adds	r2, r2, #1
 175 0036 9342     		cmp	r3, r2
 176 0038 08D0     		beq	.L12
 177              		.loc 1 332 3 discriminator 4 view .LVU24
 178 003a 2A4A     		ldr	r2, .L20+4
 179 003c 9342     		cmp	r3, r2
 180 003e 05D0     		beq	.L12
 181              		.loc 1 332 3 discriminator 5 view .LVU25
 182 0040 B3F1021F 		cmp	r3, #131074
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 10


 183 0044 02D0     		beq	.L12
 184              		.loc 1 332 3 discriminator 6 view .LVU26
 185 0046 0232     		adds	r2, r2, #2
 186 0048 9342     		cmp	r3, r2
 187 004a 43D1     		bne	.L19
 188              	.L12:
 333:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 334:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Set PLS bits according to PVDLevel value */
 335:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR2, PWR_CR2_PLS, sConfigPVD->PVDLevel);
 189              		.loc 1 335 3 is_stmt 1 view .LVU27
 190 004c 264A     		ldr	r2, .L20+8
 191 004e 5368     		ldr	r3, [r2, #4]
 192 0050 23F00E03 		bic	r3, r3, #14
 193 0054 2168     		ldr	r1, [r4]
 194 0056 0B43     		orrs	r3, r3, r1
 195 0058 5360     		str	r3, [r2, #4]
 336:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 337:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 338:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_EVENT();
 196              		.loc 1 338 3 view .LVU28
 197 005a 244B     		ldr	r3, .L20+12
 198 005c 5A68     		ldr	r2, [r3, #4]
 199 005e 22F48032 		bic	r2, r2, #65536
 200 0062 5A60     		str	r2, [r3, #4]
 339:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_IT();
 201              		.loc 1 339 3 view .LVU29
 202 0064 1A68     		ldr	r2, [r3]
 203 0066 22F48032 		bic	r2, r2, #65536
 204 006a 1A60     		str	r2, [r3]
 340:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE();
 205              		.loc 1 340 3 view .LVU30
 206 006c DA68     		ldr	r2, [r3, #12]
 207 006e 22F48032 		bic	r2, r2, #65536
 208 0072 DA60     		str	r2, [r3, #12]
 341:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE();
 209              		.loc 1 341 3 view .LVU31
 210 0074 9A68     		ldr	r2, [r3, #8]
 211 0076 22F48032 		bic	r2, r2, #65536
 212 007a 9A60     		str	r2, [r3, #8]
 342:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 343:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Configure interrupt mode */
 344:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_IT) == PVD_MODE_IT)
 213              		.loc 1 344 3 view .LVU32
 214              		.loc 1 344 17 is_stmt 0 view .LVU33
 215 007c 6368     		ldr	r3, [r4, #4]
 216              		.loc 1 344 5 view .LVU34
 217 007e 13F4803F 		tst	r3, #65536
 218 0082 04D0     		beq	.L13
 345:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 346:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_IT();
 219              		.loc 1 346 5 is_stmt 1 view .LVU35
 220 0084 194A     		ldr	r2, .L20+12
 221 0086 1368     		ldr	r3, [r2]
 222 0088 43F48033 		orr	r3, r3, #65536
 223 008c 1360     		str	r3, [r2]
 224              	.L13:
 347:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 11


 348:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 349:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Configure event mode */
 350:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_EVT) == PVD_MODE_EVT)
 225              		.loc 1 350 3 view .LVU36
 226              		.loc 1 350 17 is_stmt 0 view .LVU37
 227 008e 6368     		ldr	r3, [r4, #4]
 228              		.loc 1 350 5 view .LVU38
 229 0090 13F4003F 		tst	r3, #131072
 230 0094 04D0     		beq	.L14
 351:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 352:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_EVENT();
 231              		.loc 1 352 5 is_stmt 1 view .LVU39
 232 0096 154A     		ldr	r2, .L20+12
 233 0098 5368     		ldr	r3, [r2, #4]
 234 009a 43F48033 		orr	r3, r3, #65536
 235 009e 5360     		str	r3, [r2, #4]
 236              	.L14:
 353:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 354:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 355:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Configure the edge */
 356:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_RISING_EDGE) == PVD_RISING_EDGE)
 237              		.loc 1 356 3 view .LVU40
 238              		.loc 1 356 17 is_stmt 0 view .LVU41
 239 00a0 6368     		ldr	r3, [r4, #4]
 240              		.loc 1 356 5 view .LVU42
 241 00a2 13F0010F 		tst	r3, #1
 242 00a6 04D0     		beq	.L15
 357:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 358:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE();
 243              		.loc 1 358 5 is_stmt 1 view .LVU43
 244 00a8 104A     		ldr	r2, .L20+12
 245 00aa 9368     		ldr	r3, [r2, #8]
 246 00ac 43F48033 		orr	r3, r3, #65536
 247 00b0 9360     		str	r3, [r2, #8]
 248              	.L15:
 359:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 360:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 361:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_FALLING_EDGE) == PVD_FALLING_EDGE)
 249              		.loc 1 361 3 view .LVU44
 250              		.loc 1 361 17 is_stmt 0 view .LVU45
 251 00b2 6368     		ldr	r3, [r4, #4]
 252              		.loc 1 361 5 view .LVU46
 253 00b4 13F0020F 		tst	r3, #2
 254 00b8 04D0     		beq	.L16
 362:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 363:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE();
 255              		.loc 1 363 5 is_stmt 1 view .LVU47
 256 00ba 0C4A     		ldr	r2, .L20+12
 257 00bc D368     		ldr	r3, [r2, #12]
 258 00be 43F48033 		orr	r3, r3, #65536
 259 00c2 D360     		str	r3, [r2, #12]
 260              	.L16:
 364:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 365:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 366:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   return HAL_OK;
 261              		.loc 1 366 3 view .LVU48
 367:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 12


 262              		.loc 1 367 1 is_stmt 0 view .LVU49
 263 00c4 0020     		movs	r0, #0
 264 00c6 10BD     		pop	{r4, pc}
 265              	.LVL2:
 266              	.L18:
 331:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_MODE(sConfigPVD->Mode));
 267              		.loc 1 331 3 discriminator 8 view .LVU50
 268 00c8 40F24B11 		movw	r1, #331
 269 00cc 0848     		ldr	r0, .L20+16
 270              	.LVL3:
 331:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_MODE(sConfigPVD->Mode));
 271              		.loc 1 331 3 discriminator 8 view .LVU51
 272 00ce FFF7FEFF 		bl	assert_failed
 273              	.LVL4:
 274 00d2 A7E7     		b	.L11
 275              	.L19:
 332:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 276              		.loc 1 332 3 discriminator 7 view .LVU52
 277 00d4 4FF4A671 		mov	r1, #332
 278 00d8 0548     		ldr	r0, .L20+16
 279 00da FFF7FEFF 		bl	assert_failed
 280              	.LVL5:
 281 00de B5E7     		b	.L12
 282              	.L21:
 283              		.align	2
 284              	.L20:
 285 00e0 02000100 		.word	65538
 286 00e4 01000200 		.word	131073
 287 00e8 00700040 		.word	1073770496
 288 00ec 00040140 		.word	1073808384
 289 00f0 00000000 		.word	.LC0
 290              		.cfi_endproc
 291              	.LFE126:
 293              		.section	.text.HAL_PWR_EnablePVD,"ax",%progbits
 294              		.align	1
 295              		.global	HAL_PWR_EnablePVD
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 299              		.fpu fpv4-sp-d16
 301              	HAL_PWR_EnablePVD:
 302              	.LFB127:
 368:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 369:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 370:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 371:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Enable the Power Voltage Detector (PVD).
 372:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 373:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 374:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnablePVD(void)
 375:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 303              		.loc 1 375 1 is_stmt 1 view -0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 376:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   SET_BIT(PWR->CR2, PWR_CR2_PVDE);
 308              		.loc 1 376 3 view .LVU54
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 13


 309 0000 024A     		ldr	r2, .L23
 310 0002 5368     		ldr	r3, [r2, #4]
 311 0004 43F00103 		orr	r3, r3, #1
 312 0008 5360     		str	r3, [r2, #4]
 377:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 313              		.loc 1 377 1 is_stmt 0 view .LVU55
 314 000a 7047     		bx	lr
 315              	.L24:
 316              		.align	2
 317              	.L23:
 318 000c 00700040 		.word	1073770496
 319              		.cfi_endproc
 320              	.LFE127:
 322              		.section	.text.HAL_PWR_DisablePVD,"ax",%progbits
 323              		.align	1
 324              		.global	HAL_PWR_DisablePVD
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 328              		.fpu fpv4-sp-d16
 330              	HAL_PWR_DisablePVD:
 331              	.LFB128:
 378:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 379:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 380:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Disable the Power Voltage Detector (PVD).
 381:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 382:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 383:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_DisablePVD(void)
 384:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 332              		.loc 1 384 1 is_stmt 1 view -0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              		@ link register save eliminated.
 385:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   CLEAR_BIT(PWR->CR2, PWR_CR2_PVDE);
 337              		.loc 1 385 3 view .LVU57
 338 0000 024A     		ldr	r2, .L26
 339 0002 5368     		ldr	r3, [r2, #4]
 340 0004 23F00103 		bic	r3, r3, #1
 341 0008 5360     		str	r3, [r2, #4]
 386:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 342              		.loc 1 386 1 is_stmt 0 view .LVU58
 343 000a 7047     		bx	lr
 344              	.L27:
 345              		.align	2
 346              	.L26:
 347 000c 00700040 		.word	1073770496
 348              		.cfi_endproc
 349              	.LFE128:
 351              		.section	.text.HAL_PWR_EnableWakeUpPin,"ax",%progbits
 352              		.align	1
 353              		.global	HAL_PWR_EnableWakeUpPin
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 357              		.fpu fpv4-sp-d16
 359              	HAL_PWR_EnableWakeUpPin:
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 14


 360              	.LVL6:
 361              	.LFB129:
 387:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 388:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 389:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 390:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 391:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 392:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Enable the WakeUp PINx functionality.
 393:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @param WakeUpPinPolarity: Specifies which Wake-Up pin to enable.
 394:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         This parameter can be one of the following legacy values which set the default polarity
 395:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         i.e. detection on high level (rising edge):
 396:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           @arg @ref PWR_WAKEUP_PIN1, PWR_WAKEUP_PIN2, PWR_WAKEUP_PIN3, PWR_WAKEUP_PIN4, PWR_WAK
 397:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *
 398:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         or one of the following value where the user can explicitly specify the enabled pin and
 399:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         the chosen polarity:
 400:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           @arg @ref PWR_WAKEUP_PIN1_HIGH or PWR_WAKEUP_PIN1_LOW
 401:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           @arg @ref PWR_WAKEUP_PIN2_HIGH or PWR_WAKEUP_PIN2_LOW
 402:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           @arg @ref PWR_WAKEUP_PIN3_HIGH or PWR_WAKEUP_PIN3_LOW
 403:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           @arg @ref PWR_WAKEUP_PIN4_HIGH or PWR_WAKEUP_PIN4_LOW
 404:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           @arg @ref PWR_WAKEUP_PIN5_HIGH or PWR_WAKEUP_PIN5_LOW
 405:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  PWR_WAKEUP_PINx and PWR_WAKEUP_PINx_HIGH are equivalent.
 406:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 407:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 408:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnableWakeUpPin(uint32_t WakeUpPinPolarity)
 409:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 362              		.loc 1 409 1 is_stmt 1 view -0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366              		.loc 1 409 1 is_stmt 0 view .LVU60
 367 0000 10B5     		push	{r4, lr}
 368              	.LCFI1:
 369              		.cfi_def_cfa_offset 8
 370              		.cfi_offset 4, -8
 371              		.cfi_offset 14, -4
 372 0002 0446     		mov	r4, r0
 410:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinPolarity));
 373              		.loc 1 410 3 is_stmt 1 view .LVU61
 374 0004 431E     		subs	r3, r0, #1
 375 0006 012B     		cmp	r3, #1
 376 0008 15D9     		bls	.L29
 377              		.loc 1 410 3 is_stmt 0 discriminator 1 view .LVU62
 378 000a 0428     		cmp	r0, #4
 379 000c 13D0     		beq	.L29
 380              		.loc 1 410 3 discriminator 2 view .LVU63
 381 000e 0828     		cmp	r0, #8
 382 0010 11D0     		beq	.L29
 383              		.loc 1 410 3 discriminator 3 view .LVU64
 384 0012 1028     		cmp	r0, #16
 385 0014 0FD0     		beq	.L29
 386              		.loc 1 410 3 discriminator 4 view .LVU65
 387 0016 0128     		cmp	r0, #1
 388 0018 0DD0     		beq	.L29
 389              		.loc 1 410 3 discriminator 5 view .LVU66
 390 001a 0228     		cmp	r0, #2
 391 001c 0BD0     		beq	.L29
 392              		.loc 1 410 3 discriminator 9 view .LVU67
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 15


 393 001e 2128     		cmp	r0, #33
 394 0020 09D0     		beq	.L29
 395              		.loc 1 410 3 discriminator 10 view .LVU68
 396 0022 4228     		cmp	r0, #66
 397 0024 07D0     		beq	.L29
 398              		.loc 1 410 3 discriminator 11 view .LVU69
 399 0026 8428     		cmp	r0, #132
 400 0028 05D0     		beq	.L29
 401              		.loc 1 410 3 discriminator 12 view .LVU70
 402 002a B0F5847F 		cmp	r0, #264
 403 002e 02D0     		beq	.L29
 404              		.loc 1 410 3 discriminator 13 view .LVU71
 405 0030 B0F5047F 		cmp	r0, #528
 406 0034 0CD1     		bne	.L31
 407              	.LVL7:
 408              	.L29:
 411:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 412:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Specifies the Wake-Up pin polarity for the event detection
 413:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     (rising or falling edge) */
 414:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR4, (PWR_CR3_EWUP & WakeUpPinPolarity), (WakeUpPinPolarity >> PWR_WUP_POLARITY_S
 409              		.loc 1 414 3 is_stmt 1 view .LVU72
 410 0036 094B     		ldr	r3, .L32
 411 0038 D868     		ldr	r0, [r3, #12]
 412 003a 04F01F02 		and	r2, r4, #31
 413 003e 20EA0200 		bic	r0, r0, r2
 414 0042 40EA5414 		orr	r4, r0, r4, lsr #5
 415              	.LVL8:
 416              		.loc 1 414 3 is_stmt 0 view .LVU73
 417 0046 DC60     		str	r4, [r3, #12]
 415:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 416:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Enable wake-up pin */
 417:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   SET_BIT(PWR->CR3, (PWR_CR3_EWUP & WakeUpPinPolarity));
 418              		.loc 1 417 3 is_stmt 1 view .LVU74
 419 0048 9968     		ldr	r1, [r3, #8]
 420 004a 0A43     		orrs	r2, r2, r1
 421 004c 9A60     		str	r2, [r3, #8]
 418:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 419:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 420:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 422              		.loc 1 420 1 is_stmt 0 view .LVU75
 423 004e 10BD     		pop	{r4, pc}
 424              	.LVL9:
 425              	.L31:
 410:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 426              		.loc 1 410 3 discriminator 14 view .LVU76
 427 0050 4FF4CD71 		mov	r1, #410
 428 0054 0248     		ldr	r0, .L32+4
 429              	.LVL10:
 410:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 430              		.loc 1 410 3 discriminator 14 view .LVU77
 431 0056 FFF7FEFF 		bl	assert_failed
 432              	.LVL11:
 433 005a ECE7     		b	.L29
 434              	.L33:
 435              		.align	2
 436              	.L32:
 437 005c 00700040 		.word	1073770496
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 16


 438 0060 00000000 		.word	.LC0
 439              		.cfi_endproc
 440              	.LFE129:
 442              		.section	.text.HAL_PWR_DisableWakeUpPin,"ax",%progbits
 443              		.align	1
 444              		.global	HAL_PWR_DisableWakeUpPin
 445              		.syntax unified
 446              		.thumb
 447              		.thumb_func
 448              		.fpu fpv4-sp-d16
 450              	HAL_PWR_DisableWakeUpPin:
 451              	.LVL12:
 452              	.LFB130:
 421:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 422:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 423:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Disable the WakeUp PINx functionality.
 424:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @param WakeUpPinx: Specifies the Power Wake-Up pin to disable.
 425:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         This parameter can be one of the following values:
 426:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           @arg @ref PWR_WAKEUP_PIN1, PWR_WAKEUP_PIN2, PWR_WAKEUP_PIN3, PWR_WAKEUP_PIN4, PWR_WAK
 427:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 428:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 429:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_DisableWakeUpPin(uint32_t WakeUpPinx)
 430:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 453              		.loc 1 430 1 is_stmt 1 view -0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457              		.loc 1 430 1 is_stmt 0 view .LVU79
 458 0000 10B5     		push	{r4, lr}
 459              	.LCFI2:
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 4, -8
 462              		.cfi_offset 14, -4
 463 0002 0446     		mov	r4, r0
 431:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));
 464              		.loc 1 431 3 is_stmt 1 view .LVU80
 465 0004 431E     		subs	r3, r0, #1
 466 0006 012B     		cmp	r3, #1
 467 0008 15D9     		bls	.L35
 468              		.loc 1 431 3 is_stmt 0 discriminator 1 view .LVU81
 469 000a 0428     		cmp	r0, #4
 470 000c 13D0     		beq	.L35
 471              		.loc 1 431 3 discriminator 2 view .LVU82
 472 000e 0828     		cmp	r0, #8
 473 0010 11D0     		beq	.L35
 474              		.loc 1 431 3 discriminator 3 view .LVU83
 475 0012 1028     		cmp	r0, #16
 476 0014 0FD0     		beq	.L35
 477              		.loc 1 431 3 discriminator 4 view .LVU84
 478 0016 0128     		cmp	r0, #1
 479 0018 0DD0     		beq	.L35
 480              		.loc 1 431 3 discriminator 5 view .LVU85
 481 001a 0228     		cmp	r0, #2
 482 001c 0BD0     		beq	.L35
 483              		.loc 1 431 3 discriminator 9 view .LVU86
 484 001e 2128     		cmp	r0, #33
 485 0020 09D0     		beq	.L35
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 17


 486              		.loc 1 431 3 discriminator 10 view .LVU87
 487 0022 4228     		cmp	r0, #66
 488 0024 07D0     		beq	.L35
 489              		.loc 1 431 3 discriminator 11 view .LVU88
 490 0026 8428     		cmp	r0, #132
 491 0028 05D0     		beq	.L35
 492              		.loc 1 431 3 discriminator 12 view .LVU89
 493 002a B0F5847F 		cmp	r0, #264
 494 002e 02D0     		beq	.L35
 495              		.loc 1 431 3 discriminator 13 view .LVU90
 496 0030 B0F5047F 		cmp	r0, #528
 497 0034 07D1     		bne	.L37
 498              	.LVL13:
 499              	.L35:
 432:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 433:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   CLEAR_BIT(PWR->CR3, (PWR_CR3_EWUP & WakeUpPinx));
 500              		.loc 1 433 3 is_stmt 1 view .LVU91
 501 0036 074B     		ldr	r3, .L38
 502 0038 9868     		ldr	r0, [r3, #8]
 503 003a 04F01F04 		and	r4, r4, #31
 504              	.LVL14:
 505              		.loc 1 433 3 is_stmt 0 view .LVU92
 506 003e 20EA0404 		bic	r4, r0, r4
 507 0042 9C60     		str	r4, [r3, #8]
 434:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 508              		.loc 1 434 1 view .LVU93
 509 0044 10BD     		pop	{r4, pc}
 510              	.LVL15:
 511              	.L37:
 431:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));
 512              		.loc 1 431 3 discriminator 14 view .LVU94
 513 0046 40F2AF11 		movw	r1, #431
 514 004a 0348     		ldr	r0, .L38+4
 515              	.LVL16:
 431:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));
 516              		.loc 1 431 3 discriminator 14 view .LVU95
 517 004c FFF7FEFF 		bl	assert_failed
 518              	.LVL17:
 519 0050 F1E7     		b	.L35
 520              	.L39:
 521 0052 00BF     		.align	2
 522              	.L38:
 523 0054 00700040 		.word	1073770496
 524 0058 00000000 		.word	.LC0
 525              		.cfi_endproc
 526              	.LFE130:
 528              		.section	.text.HAL_PWR_EnterSLEEPMode,"ax",%progbits
 529              		.align	1
 530              		.global	HAL_PWR_EnterSLEEPMode
 531              		.syntax unified
 532              		.thumb
 533              		.thumb_func
 534              		.fpu fpv4-sp-d16
 536              	HAL_PWR_EnterSLEEPMode:
 537              	.LVL18:
 538              	.LFB131:
 435:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 18


 436:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 437:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 438:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Enter Sleep or Low-power Sleep mode.
 439:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  In Sleep/Low-power Sleep mode, all I/O pins keep the same state as in Run mode.
 440:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @param Regulator: Specifies the regulator state in Sleep/Low-power Sleep mode.
 441:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 442:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_MAINREGULATOR_ON Sleep mode (regulator in main mode)
 443:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_LOWPOWERREGULATOR_ON Low-power Sleep mode (regulator in low-power mode
 444:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  Low-power Sleep mode is entered from Low-power Run mode. Therefore, if not yet
 445:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        in Low-power Run mode before calling HAL_PWR_EnterSLEEPMode() with Regulator set
 446:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        to PWR_LOWPOWERREGULATOR_ON, the user can optionally configure the
 447:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        Flash in power-down monde in setting the SLEEP_PD bit in FLASH_ACR register.
 448:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        Additionally, the clock frequency must be reduced below 2 MHz.
 449:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        Setting SLEEP_PD in FLASH_ACR then appropriately reducing the clock frequency must
 450:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        be done before calling HAL_PWR_EnterSLEEPMode() API.
 451:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  When exiting Low-power Sleep mode, the MCU is in Low-power Run mode. To move in
 452:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        Run mode, the user must resort to HAL_PWREx_DisableLowPowerRunMode() API.
 453:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @param SLEEPEntry: Specifies if Sleep mode is entered with WFI or WFE instruction.
 454:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           This parameter can be one of the following values:
 455:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_SLEEPENTRY_WFI enter Sleep or Low-power Sleep mode with WFI instructio
 456:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_SLEEPENTRY_WFE enter Sleep or Low-power Sleep mode with WFE instructio
 457:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  When WFI entry is used, tick interrupt have to be disabled if not desired as
 458:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        the interrupt wake up source.
 459:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 460:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 461:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnterSLEEPMode(uint32_t Regulator, uint8_t SLEEPEntry)
 462:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 539              		.loc 1 462 1 is_stmt 1 view -0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543              		.loc 1 462 1 is_stmt 0 view .LVU97
 544 0000 38B5     		push	{r3, r4, r5, lr}
 545              	.LCFI3:
 546              		.cfi_def_cfa_offset 16
 547              		.cfi_offset 3, -16
 548              		.cfi_offset 4, -12
 549              		.cfi_offset 5, -8
 550              		.cfi_offset 14, -4
 551 0002 0C46     		mov	r4, r1
 463:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Check the parameters */
 464:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 552              		.loc 1 464 3 is_stmt 1 view .LVU98
 553 0004 0546     		mov	r5, r0
 554 0006 10B1     		cbz	r0, .L41
 555              		.loc 1 464 3 is_stmt 0 discriminator 1 view .LVU99
 556 0008 B0F5804F 		cmp	r0, #16384
 557 000c 14D1     		bne	.L48
 558              	.LVL19:
 559              	.L41:
 465:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_SLEEP_ENTRY(SLEEPEntry));
 560              		.loc 1 465 3 is_stmt 1 view .LVU100
 561 000e 631E     		subs	r3, r4, #1
 562 0010 DBB2     		uxtb	r3, r3
 563 0012 012B     		cmp	r3, #1
 564 0014 16D8     		bhi	.L49
 565              	.L42:
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 19


 466:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 467:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Set Regulator parameter */
 468:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   if (Regulator == PWR_MAINREGULATOR_ON)
 566              		.loc 1 468 3 view .LVU101
 567              		.loc 1 468 6 is_stmt 0 view .LVU102
 568 0016 05BB     		cbnz	r5, .L43
 469:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 470:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     /* If in low-power run mode at this point, exit it */
 471:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF))
 569              		.loc 1 471 5 is_stmt 1 view .LVU103
 570              		.loc 1 471 9 is_stmt 0 view .LVU104
 571 0018 154B     		ldr	r3, .L52
 572 001a 5B69     		ldr	r3, [r3, #20]
 573              		.loc 1 471 8 view .LVU105
 574 001c 13F4007F 		tst	r3, #512
 575 0020 16D1     		bne	.L50
 576              	.L44:
 472:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     {
 473:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       if (HAL_PWREx_DisableLowPowerRunMode() != HAL_OK)
 474:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       {
 475:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         return ;
 476:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       }
 477:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     }
 478:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     /* Regulator now in main mode. */
 479:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 480:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   else
 481:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 482:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     /* If in run mode, first move to low-power run mode.
 483:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****        The system clock frequency must be below 2 MHz at this point. */
 484:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF) == RESET)
 485:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     {
 486:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       HAL_PWREx_EnableLowPowerRunMode();
 487:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     }
 488:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 489:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 490:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Clear SLEEPDEEP bit of Cortex System Control Register */
 491:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 577              		.loc 1 491 3 is_stmt 1 view .LVU106
 578 0022 144A     		ldr	r2, .L52+4
 579 0024 1369     		ldr	r3, [r2, #16]
 580 0026 23F00403 		bic	r3, r3, #4
 581 002a 1361     		str	r3, [r2, #16]
 492:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 493:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Select SLEEP mode entry -------------------------------------------------*/
 494:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   if(SLEEPEntry == PWR_SLEEPENTRY_WFI)
 582              		.loc 1 494 3 view .LVU107
 583              		.loc 1 494 5 is_stmt 0 view .LVU108
 584 002c 012C     		cmp	r4, #1
 585 002e 1CD0     		beq	.L51
 495:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 496:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     /* Request Wait For Interrupt */
 497:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __WFI();
 498:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 499:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   else
 500:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 501:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     /* Request Wait For Event */
 502:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __SEV();
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 20


 586              		.loc 1 502 5 is_stmt 1 view .LVU109
 587              	.LBB12:
 588              	.LBI12:
 589              		.file 2 "../../../core/ST/CMSIS/Include/cmsis_gcc.h"
   1:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
   9:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****    *
  21:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  34:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  35:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  38:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #endif
  45:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  46:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  47:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   @{
  51:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
  52:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  53:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 21


  54:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
  58:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
  60:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
  62:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  63:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  64:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
  65:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
  69:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
  71:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
  73:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  74:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  75:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
  76:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
  80:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
  82:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  84:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
  87:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  88:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  89:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
  90:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
  94:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
  96:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
  98:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  99:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 100:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 101:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 105:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 107:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 109:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 22


 111:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 112:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 113:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 114:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 115:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 119:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 121:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 123:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 126:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 127:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 128:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 129:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 132:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 134:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 136:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 138:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 141:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 142:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 143:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 144:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 148:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 150:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 152:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 155:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 156:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 157:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 158:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 162:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 164:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 166:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 167:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 23


 168:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 169:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 173:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 175:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 177:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 180:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 181:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 182:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 183:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 186:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 188:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 190:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 192:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 193:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 194:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 195:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 199:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 201:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 203:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 206:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 207:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 208:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 209:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 213:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 215:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 217:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 218:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 219:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 221:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 222:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 24


 225:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 226:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 228:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 230:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 231:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 232:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 233:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 237:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 239:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 241:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 242:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 243:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 244:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 248:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 250:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 252:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 255:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 256:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 257:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 258:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 262:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 264:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 266:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 267:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 268:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 269:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 274:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 276:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 278:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 279:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 280:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 281:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 25


 282:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 285:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 287:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 289:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 292:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 293:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 294:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 295:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 299:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 301:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 303:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 304:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 306:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 307:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 309:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 310:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 314:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 316:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 319:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #else
 325:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #endif
 327:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 328:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 329:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 330:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 331:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 335:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 337:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 26


 339:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #endif
 343:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 344:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 345:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 347:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 348:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 349:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 351:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 352:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   @{
 356:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** */
 357:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 358:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #else
 365:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** #endif
 368:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 369:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 370:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 373:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 375:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 377:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 378:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 379:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 380:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 383:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 385:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 387:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 388:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 389:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 390:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 394:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 27


 396:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 398:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 399:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 400:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 401:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 404:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 590              		.loc 2 404 53 view .LVU110
 591              	.LBB13:
 405:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 406:../../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 592              		.loc 2 406 3 view .LVU111
 593              		.syntax unified
 594              	@ 406 "../../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 595 0030 40BF     		sev
 596              	@ 0 "" 2
 597              		.thumb
 598              		.syntax unified
 599              	.LBE13:
 600              	.LBE12:
 503:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __WFE();
 601              		.loc 1 503 5 view .LVU112
 602              	.LBB14:
 603              	.LBI14:
 394:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 604              		.loc 2 394 53 view .LVU113
 605              	.LBB15:
 396:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 606              		.loc 2 396 3 view .LVU114
 607              		.syntax unified
 608              	@ 396 "../../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 609 0032 20BF     		wfe
 610              	@ 0 "" 2
 611              		.thumb
 612              		.syntax unified
 613              	.LBE15:
 614              	.LBE14:
 504:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __WFE();
 615              		.loc 1 504 5 view .LVU115
 616              	.LBB16:
 617              	.LBI16:
 394:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 618              		.loc 2 394 53 view .LVU116
 619              	.LBB17:
 396:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 620              		.loc 2 396 3 view .LVU117
 621              		.syntax unified
 622              	@ 396 "../../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 623 0034 20BF     		wfe
 624              	@ 0 "" 2
 625              		.thumb
 626              		.syntax unified
 627              	.L40:
 628              	.LBE17:
 629              	.LBE16:
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 28


 505:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 506:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 507:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 630              		.loc 1 507 1 is_stmt 0 view .LVU118
 631 0036 38BD     		pop	{r3, r4, r5, pc}
 632              	.LVL20:
 633              	.L48:
 464:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_SLEEP_ENTRY(SLEEPEntry));
 634              		.loc 1 464 3 discriminator 2 view .LVU119
 635 0038 4FF4E871 		mov	r1, #464
 636              	.LVL21:
 464:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_SLEEP_ENTRY(SLEEPEntry));
 637              		.loc 1 464 3 discriminator 2 view .LVU120
 638 003c 0E48     		ldr	r0, .L52+8
 639              	.LVL22:
 464:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_SLEEP_ENTRY(SLEEPEntry));
 640              		.loc 1 464 3 discriminator 2 view .LVU121
 641 003e FFF7FEFF 		bl	assert_failed
 642              	.LVL23:
 643 0042 E4E7     		b	.L41
 644              	.L49:
 465:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 645              		.loc 1 465 3 discriminator 1 view .LVU122
 646 0044 40F2D111 		movw	r1, #465
 647 0048 0B48     		ldr	r0, .L52+8
 648 004a FFF7FEFF 		bl	assert_failed
 649              	.LVL24:
 650 004e E2E7     		b	.L42
 651              	.L50:
 473:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       {
 652              		.loc 1 473 7 is_stmt 1 view .LVU123
 473:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       {
 653              		.loc 1 473 11 is_stmt 0 view .LVU124
 654 0050 FFF7FEFF 		bl	HAL_PWREx_DisableLowPowerRunMode
 655              	.LVL25:
 473:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       {
 656              		.loc 1 473 10 view .LVU125
 657 0054 0028     		cmp	r0, #0
 658 0056 E4D0     		beq	.L44
 659 0058 EDE7     		b	.L40
 660              	.L43:
 484:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     {
 661              		.loc 1 484 5 is_stmt 1 view .LVU126
 484:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     {
 662              		.loc 1 484 9 is_stmt 0 view .LVU127
 663 005a 054B     		ldr	r3, .L52
 664 005c 5B69     		ldr	r3, [r3, #20]
 484:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     {
 665              		.loc 1 484 8 view .LVU128
 666 005e 13F4007F 		tst	r3, #512
 667 0062 DED1     		bne	.L44
 486:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     }
 668              		.loc 1 486 7 is_stmt 1 view .LVU129
 669 0064 FFF7FEFF 		bl	HAL_PWREx_EnableLowPowerRunMode
 670              	.LVL26:
 671 0068 DBE7     		b	.L44
 672              	.L51:
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 29


 497:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 673              		.loc 1 497 5 view .LVU130
 674              	.LBB18:
 675              	.LBI18:
 383:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 676              		.loc 2 383 53 view .LVU131
 677              	.LBB19:
 385:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 678              		.loc 2 385 3 view .LVU132
 679              		.syntax unified
 680              	@ 385 "../../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 681 006a 30BF     		wfi
 682              	@ 0 "" 2
 386:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 683              		.loc 2 386 1 is_stmt 0 view .LVU133
 684              		.thumb
 685              		.syntax unified
 686 006c E3E7     		b	.L40
 687              	.L53:
 688 006e 00BF     		.align	2
 689              	.L52:
 690 0070 00700040 		.word	1073770496
 691 0074 00ED00E0 		.word	-536810240
 692 0078 00000000 		.word	.LC0
 693              	.LBE19:
 694              	.LBE18:
 695              		.cfi_endproc
 696              	.LFE131:
 698              		.section	.text.HAL_PWR_EnterSTOPMode,"ax",%progbits
 699              		.align	1
 700              		.global	HAL_PWR_EnterSTOPMode
 701              		.syntax unified
 702              		.thumb
 703              		.thumb_func
 704              		.fpu fpv4-sp-d16
 706              	HAL_PWR_EnterSTOPMode:
 707              	.LVL27:
 708              	.LFB132:
 508:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 509:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 510:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 511:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Enter Stop mode
 512:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  This API is named HAL_PWR_EnterSTOPMode to ensure compatibility with legacy code running
 513:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        on devices where only "Stop mode" is mentioned with main or low power regulator ON.
 514:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  In Stop mode, all I/O pins keep the same state as in Run mode.
 515:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  All clocks in the VCORE domain are stopped; the PLL, the MSI,
 516:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        the HSI and the HSE oscillators are disabled. Some peripherals with the wakeup capabilit
 517:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        (I2Cx, USARTx and LPUART) can switch on the HSI to receive a frame, and switch off the H
 518:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        after receiving the frame if it is not a wakeup frame. In this case, the HSI clock is pr
 519:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        only to the peripheral requesting it.
 520:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        SRAM1, SRAM2 and register contents are preserved.
 521:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        The BOR is available.
 522:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        The voltage regulator can be configured either in normal (Stop 0) or low-power mode (Sto
 523:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  When exiting Stop 0 or Stop 1 mode by issuing an interrupt or a wakeup event,
 524:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
 525:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         is set; the MSI oscillator is selected if STOPWUCK is cleared.
 526:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  When the voltage regulator operates in low power mode (Stop 1), an additional
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 30


 527:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         startup delay is incurred when waking up.
 528:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         By keeping the internal regulator ON during Stop mode (Stop 0), the consumption
 529:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         is higher although the startup time is reduced.
 530:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @param Regulator: Specifies the regulator state in Stop mode.
 531:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 532:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_MAINREGULATOR_ON  Stop 0 mode (main regulator ON)
 533:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_LOWPOWERREGULATOR_ON  Stop 1 mode (low power regulator ON)
 534:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @param STOPEntry: Specifies Stop 0 or Stop 1 mode is entered with WFI or WFE instruction.
 535:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 536:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop 0 or Stop 1 mode with WFI instruction.
 537:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop 0 or Stop 1 mode with WFE instruction.
 538:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 539:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 540:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnterSTOPMode(uint32_t Regulator, uint8_t STOPEntry)
 541:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 709              		.loc 1 541 1 is_stmt 1 view -0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 0
 712              		@ frame_needed = 0, uses_anonymous_args = 0
 713              		.loc 1 541 1 is_stmt 0 view .LVU135
 714 0000 38B5     		push	{r3, r4, r5, lr}
 715              	.LCFI4:
 716              		.cfi_def_cfa_offset 16
 717              		.cfi_offset 3, -16
 718              		.cfi_offset 4, -12
 719              		.cfi_offset 5, -8
 720              		.cfi_offset 14, -4
 721 0002 0C46     		mov	r4, r1
 542:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Check the parameters */
 543:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 722              		.loc 1 543 3 is_stmt 1 view .LVU136
 723 0004 0546     		mov	r5, r0
 724 0006 10B1     		cbz	r0, .L55
 725              		.loc 1 543 3 is_stmt 0 discriminator 1 view .LVU137
 726 0008 B0F5804F 		cmp	r0, #16384
 727 000c 06D1     		bne	.L59
 728              	.LVL28:
 729              	.L55:
 544:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 545:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   if(Regulator == PWR_LOWPOWERREGULATOR_ON)
 730              		.loc 1 545 3 is_stmt 1 view .LVU138
 731              		.loc 1 545 5 is_stmt 0 view .LVU139
 732 000e B5F5804F 		cmp	r5, #16384
 733 0012 09D0     		beq	.L60
 546:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 547:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     HAL_PWREx_EnterSTOP1Mode(STOPEntry);
 548:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 549:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   else
 550:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 551:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     HAL_PWREx_EnterSTOP0Mode(STOPEntry);
 734              		.loc 1 551 5 is_stmt 1 view .LVU140
 735 0014 2046     		mov	r0, r4
 736 0016 FFF7FEFF 		bl	HAL_PWREx_EnterSTOP0Mode
 737              	.LVL29:
 738              	.L54:
 552:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 553:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 31


 739              		.loc 1 553 1 is_stmt 0 view .LVU141
 740 001a 38BD     		pop	{r3, r4, r5, pc}
 741              	.LVL30:
 742              	.L59:
 543:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 743              		.loc 1 543 3 discriminator 2 view .LVU142
 744 001c 40F21F21 		movw	r1, #543
 745              	.LVL31:
 543:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 746              		.loc 1 543 3 discriminator 2 view .LVU143
 747 0020 0348     		ldr	r0, .L61
 748              	.LVL32:
 543:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 749              		.loc 1 543 3 discriminator 2 view .LVU144
 750 0022 FFF7FEFF 		bl	assert_failed
 751              	.LVL33:
 752 0026 F2E7     		b	.L55
 753              	.L60:
 547:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 754              		.loc 1 547 5 is_stmt 1 view .LVU145
 755 0028 2046     		mov	r0, r4
 756 002a FFF7FEFF 		bl	HAL_PWREx_EnterSTOP1Mode
 757              	.LVL34:
 758 002e F4E7     		b	.L54
 759              	.L62:
 760              		.align	2
 761              	.L61:
 762 0030 00000000 		.word	.LC0
 763              		.cfi_endproc
 764              	.LFE132:
 766              		.section	.text.HAL_PWR_EnterSTANDBYMode,"ax",%progbits
 767              		.align	1
 768              		.global	HAL_PWR_EnterSTANDBYMode
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 772              		.fpu fpv4-sp-d16
 774              	HAL_PWR_EnterSTANDBYMode:
 775              	.LFB133:
 554:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 555:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 556:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Enter Standby mode.
 557:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  In Standby mode, the PLL, the HSI, the MSI and the HSE oscillators are switched
 558:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        off. The voltage regulator is disabled, except when SRAM2 content is preserved
 559:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        in which case the regulator is in low-power mode.
 560:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        SRAM1 and register contents are lost except for registers in the Backup domain and
 561:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        Standby circuitry. SRAM2 content can be preserved if the bit RRS is set in PWR_CR3 regis
 562:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        To enable this feature, the user can resort to HAL_PWREx_EnableSRAM2ContentRetention() A
 563:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        to set RRS bit.
 564:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        The BOR is available.
 565:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  The I/Os can be configured either with a pull-up or pull-down or can be kept in analog s
 566:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        HAL_PWREx_EnableGPIOPullUp() and HAL_PWREx_EnableGPIOPullDown() respectively enable Pull
 567:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        Pull Down state, HAL_PWREx_DisableGPIOPullUp() and HAL_PWREx_DisableGPIOPullDown() disab
 568:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        same.
 569:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        These states are effective in Standby mode only if APC bit is set through
 570:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        HAL_PWREx_EnablePullUpPullDownConfig() API.
 571:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 32


 572:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 573:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnterSTANDBYMode(void)
 574:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 776              		.loc 1 574 1 view -0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 0
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 780              		@ link register save eliminated.
 575:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Set Stand-by mode */
 576:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STANDBY);
 781              		.loc 1 576 3 view .LVU147
 782 0000 064A     		ldr	r2, .L64
 783 0002 1368     		ldr	r3, [r2]
 784 0004 23F00703 		bic	r3, r3, #7
 785 0008 43F00303 		orr	r3, r3, #3
 786 000c 1360     		str	r3, [r2]
 577:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 578:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 579:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 787              		.loc 1 579 3 view .LVU148
 788 000e 044A     		ldr	r2, .L64+4
 789 0010 1369     		ldr	r3, [r2, #16]
 790 0012 43F00403 		orr	r3, r3, #4
 791 0016 1361     		str	r3, [r2, #16]
 580:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 581:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* This option is used to ensure that store operations are completed */
 582:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #if defined ( __CC_ARM)
 583:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __force_stores();
 584:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #endif
 585:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Request Wait For Interrupt */
 586:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __WFI();
 792              		.loc 1 586 3 view .LVU149
 793              	.LBB20:
 794              	.LBI20:
 383:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 795              		.loc 2 383 53 view .LVU150
 796              	.LBB21:
 385:../../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 797              		.loc 2 385 3 view .LVU151
 798              		.syntax unified
 799              	@ 385 "../../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 800 0018 30BF     		wfi
 801              	@ 0 "" 2
 802              		.thumb
 803              		.syntax unified
 804              	.LBE21:
 805              	.LBE20:
 587:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 806              		.loc 1 587 1 is_stmt 0 view .LVU152
 807 001a 7047     		bx	lr
 808              	.L65:
 809              		.align	2
 810              	.L64:
 811 001c 00700040 		.word	1073770496
 812 0020 00ED00E0 		.word	-536810240
 813              		.cfi_endproc
 814              	.LFE133:
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 33


 816              		.section	.text.HAL_PWR_EnableSleepOnExit,"ax",%progbits
 817              		.align	1
 818              		.global	HAL_PWR_EnableSleepOnExit
 819              		.syntax unified
 820              		.thumb
 821              		.thumb_func
 822              		.fpu fpv4-sp-d16
 824              	HAL_PWR_EnableSleepOnExit:
 825              	.LFB134:
 588:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 589:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 590:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 591:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 592:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Indicate Sleep-On-Exit when returning from Handler mode to Thread mode.
 593:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note Set SLEEPONEXIT bit of SCR register. When this bit is set, the processor
 594:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.
 595:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *       Setting this bit is useful when the processor is expected to run only on
 596:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *       interruptions handling.
 597:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 598:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 599:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnableSleepOnExit(void)
 600:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 826              		.loc 1 600 1 is_stmt 1 view -0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 0
 829              		@ frame_needed = 0, uses_anonymous_args = 0
 830              		@ link register save eliminated.
 601:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Set SLEEPONEXIT bit of Cortex System Control Register */
 602:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 831              		.loc 1 602 3 view .LVU154
 832 0000 024A     		ldr	r2, .L67
 833 0002 1369     		ldr	r3, [r2, #16]
 834 0004 43F00203 		orr	r3, r3, #2
 835 0008 1361     		str	r3, [r2, #16]
 603:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 836              		.loc 1 603 1 is_stmt 0 view .LVU155
 837 000a 7047     		bx	lr
 838              	.L68:
 839              		.align	2
 840              	.L67:
 841 000c 00ED00E0 		.word	-536810240
 842              		.cfi_endproc
 843              	.LFE134:
 845              		.section	.text.HAL_PWR_DisableSleepOnExit,"ax",%progbits
 846              		.align	1
 847              		.global	HAL_PWR_DisableSleepOnExit
 848              		.syntax unified
 849              		.thumb
 850              		.thumb_func
 851              		.fpu fpv4-sp-d16
 853              	HAL_PWR_DisableSleepOnExit:
 854              	.LFB135:
 604:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 605:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 606:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 607:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Disable Sleep-On-Exit feature when returning from Handler mode to Thread mode.
 608:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note Clear SLEEPONEXIT bit of SCR register. When this bit is set, the processor
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 34


 609:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.
 610:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 611:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 612:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_DisableSleepOnExit(void)
 613:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 855              		.loc 1 613 1 is_stmt 1 view -0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
 858              		@ frame_needed = 0, uses_anonymous_args = 0
 859              		@ link register save eliminated.
 614:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Clear SLEEPONEXIT bit of Cortex System Control Register */
 615:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 860              		.loc 1 615 3 view .LVU157
 861 0000 024A     		ldr	r2, .L70
 862 0002 1369     		ldr	r3, [r2, #16]
 863 0004 23F00203 		bic	r3, r3, #2
 864 0008 1361     		str	r3, [r2, #16]
 616:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 865              		.loc 1 616 1 is_stmt 0 view .LVU158
 866 000a 7047     		bx	lr
 867              	.L71:
 868              		.align	2
 869              	.L70:
 870 000c 00ED00E0 		.word	-536810240
 871              		.cfi_endproc
 872              	.LFE135:
 874              		.section	.text.HAL_PWR_EnableSEVOnPend,"ax",%progbits
 875              		.align	1
 876              		.global	HAL_PWR_EnableSEVOnPend
 877              		.syntax unified
 878              		.thumb
 879              		.thumb_func
 880              		.fpu fpv4-sp-d16
 882              	HAL_PWR_EnableSEVOnPend:
 883              	.LFB136:
 617:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 618:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 619:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 620:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 621:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Enable CORTEX M4 SEVONPEND bit.
 622:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note Set SEVONPEND bit of SCR register. When this bit is set, this causes
 623:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.
 624:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 625:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 626:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnableSEVOnPend(void)
 627:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 884              		.loc 1 627 1 is_stmt 1 view -0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 0, uses_anonymous_args = 0
 888              		@ link register save eliminated.
 628:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Set SEVONPEND bit of Cortex System Control Register */
 629:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
 889              		.loc 1 629 3 view .LVU160
 890 0000 024A     		ldr	r2, .L73
 891 0002 1369     		ldr	r3, [r2, #16]
 892 0004 43F01003 		orr	r3, r3, #16
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 35


 893 0008 1361     		str	r3, [r2, #16]
 630:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 894              		.loc 1 630 1 is_stmt 0 view .LVU161
 895 000a 7047     		bx	lr
 896              	.L74:
 897              		.align	2
 898              	.L73:
 899 000c 00ED00E0 		.word	-536810240
 900              		.cfi_endproc
 901              	.LFE136:
 903              		.section	.text.HAL_PWR_DisableSEVOnPend,"ax",%progbits
 904              		.align	1
 905              		.global	HAL_PWR_DisableSEVOnPend
 906              		.syntax unified
 907              		.thumb
 908              		.thumb_func
 909              		.fpu fpv4-sp-d16
 911              	HAL_PWR_DisableSEVOnPend:
 912              	.LFB137:
 631:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 632:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 633:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 634:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Disable CORTEX M4 SEVONPEND bit.
 635:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note Clear SEVONPEND bit of SCR register. When this bit is set, this causes
 636:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.
 637:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 638:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 639:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_DisableSEVOnPend(void)
 640:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 913              		.loc 1 640 1 is_stmt 1 view -0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 0
 916              		@ frame_needed = 0, uses_anonymous_args = 0
 917              		@ link register save eliminated.
 641:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Clear SEVONPEND bit of Cortex System Control Register */
 642:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
 918              		.loc 1 642 3 view .LVU163
 919 0000 024A     		ldr	r2, .L76
 920 0002 1369     		ldr	r3, [r2, #16]
 921 0004 23F01003 		bic	r3, r3, #16
 922 0008 1361     		str	r3, [r2, #16]
 643:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 923              		.loc 1 643 1 is_stmt 0 view .LVU164
 924 000a 7047     		bx	lr
 925              	.L77:
 926              		.align	2
 927              	.L76:
 928 000c 00ED00E0 		.word	-536810240
 929              		.cfi_endproc
 930              	.LFE137:
 932              		.section	.text.HAL_PWR_PVDCallback,"ax",%progbits
 933              		.align	1
 934              		.weak	HAL_PWR_PVDCallback
 935              		.syntax unified
 936              		.thumb
 937              		.thumb_func
 938              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 36


 940              	HAL_PWR_PVDCallback:
 941              	.LFB138:
 644:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 645:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 646:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 647:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 648:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 649:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 650:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief PWR PVD interrupt callback
 651:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 652:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 653:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** __weak void HAL_PWR_PVDCallback(void)
 654:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 942              		.loc 1 654 1 is_stmt 1 view -0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 0
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 946              		@ link register save eliminated.
 655:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* NOTE : This function should not be modified; when the callback is needed,
 656:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****             the HAL_PWR_PVDCallback can be implemented in the user file
 657:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    */
 658:../../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 947              		.loc 1 658 1 view .LVU166
 948 0000 7047     		bx	lr
 949              		.cfi_endproc
 950              	.LFE138:
 952              		.text
 953              	.Letext0:
 954              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 955              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 956              		.file 5 "../../../core/ST/CMSIS/Include/core_cm4.h"
 957              		.file 6 "../../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 958              		.file 7 "../../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/stm32l496xx.h"
 959              		.file 8 "../../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 960              		.file 9 "../../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 961              		.file 10 "../../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr.h"
 962              		.file 11 "../../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 963              		.file 12 "../../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 964              		.file 13 "../../../core/platform/octa/inc/stm32l4xx_hal_conf.h"
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 37


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l4xx_hal_pwr.c
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:18     .text.HAL_PWR_DeInit:00000000 $t
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:26     .text.HAL_PWR_DeInit:00000000 HAL_PWR_DeInit
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:48     .text.HAL_PWR_DeInit:00000014 $d
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:53     .text.HAL_PWR_EnableBkUpAccess:00000000 $t
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:60     .text.HAL_PWR_EnableBkUpAccess:00000000 HAL_PWR_EnableBkUpAccess
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:77     .text.HAL_PWR_EnableBkUpAccess:0000000c $d
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:82     .text.HAL_PWR_DisableBkUpAccess:00000000 $t
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:89     .text.HAL_PWR_DisableBkUpAccess:00000000 HAL_PWR_DisableBkUpAccess
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:106    .text.HAL_PWR_DisableBkUpAccess:0000000c $d
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:111    .rodata.HAL_PWR_ConfigPVD.str1.4:00000000 $d
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:116    .text.HAL_PWR_ConfigPVD:00000000 $t
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:123    .text.HAL_PWR_ConfigPVD:00000000 HAL_PWR_ConfigPVD
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:285    .text.HAL_PWR_ConfigPVD:000000e0 $d
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:294    .text.HAL_PWR_EnablePVD:00000000 $t
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:301    .text.HAL_PWR_EnablePVD:00000000 HAL_PWR_EnablePVD
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:318    .text.HAL_PWR_EnablePVD:0000000c $d
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:323    .text.HAL_PWR_DisablePVD:00000000 $t
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:330    .text.HAL_PWR_DisablePVD:00000000 HAL_PWR_DisablePVD
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:347    .text.HAL_PWR_DisablePVD:0000000c $d
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:352    .text.HAL_PWR_EnableWakeUpPin:00000000 $t
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:359    .text.HAL_PWR_EnableWakeUpPin:00000000 HAL_PWR_EnableWakeUpPin
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:437    .text.HAL_PWR_EnableWakeUpPin:0000005c $d
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:443    .text.HAL_PWR_DisableWakeUpPin:00000000 $t
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:450    .text.HAL_PWR_DisableWakeUpPin:00000000 HAL_PWR_DisableWakeUpPin
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:523    .text.HAL_PWR_DisableWakeUpPin:00000054 $d
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:529    .text.HAL_PWR_EnterSLEEPMode:00000000 $t
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:536    .text.HAL_PWR_EnterSLEEPMode:00000000 HAL_PWR_EnterSLEEPMode
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:690    .text.HAL_PWR_EnterSLEEPMode:00000070 $d
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:699    .text.HAL_PWR_EnterSTOPMode:00000000 $t
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:706    .text.HAL_PWR_EnterSTOPMode:00000000 HAL_PWR_EnterSTOPMode
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:762    .text.HAL_PWR_EnterSTOPMode:00000030 $d
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:767    .text.HAL_PWR_EnterSTANDBYMode:00000000 $t
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:774    .text.HAL_PWR_EnterSTANDBYMode:00000000 HAL_PWR_EnterSTANDBYMode
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:811    .text.HAL_PWR_EnterSTANDBYMode:0000001c $d
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:817    .text.HAL_PWR_EnableSleepOnExit:00000000 $t
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:824    .text.HAL_PWR_EnableSleepOnExit:00000000 HAL_PWR_EnableSleepOnExit
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:841    .text.HAL_PWR_EnableSleepOnExit:0000000c $d
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:846    .text.HAL_PWR_DisableSleepOnExit:00000000 $t
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:853    .text.HAL_PWR_DisableSleepOnExit:00000000 HAL_PWR_DisableSleepOnExit
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:870    .text.HAL_PWR_DisableSleepOnExit:0000000c $d
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:875    .text.HAL_PWR_EnableSEVOnPend:00000000 $t
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:882    .text.HAL_PWR_EnableSEVOnPend:00000000 HAL_PWR_EnableSEVOnPend
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:899    .text.HAL_PWR_EnableSEVOnPend:0000000c $d
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:904    .text.HAL_PWR_DisableSEVOnPend:00000000 $t
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:911    .text.HAL_PWR_DisableSEVOnPend:00000000 HAL_PWR_DisableSEVOnPend
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:928    .text.HAL_PWR_DisableSEVOnPend:0000000c $d
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:933    .text.HAL_PWR_PVDCallback:00000000 $t
C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s:940    .text.HAL_PWR_PVDCallback:00000000 HAL_PWR_PVDCallback

UNDEFINED SYMBOLS
assert_failed
HAL_PWREx_DisableLowPowerRunMode
HAL_PWREx_EnableLowPowerRunMode
HAL_PWREx_EnterSTOP0Mode
HAL_PWREx_EnterSTOP1Mode
ARM GAS  C:\Users\tijsv\AppData\Local\Temp\cc25lwVc.s 			page 38


